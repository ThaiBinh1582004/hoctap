#include<stdio.h>
#include<conio.h>
#include<string.h>
#include<stdlib.h>

struct Date
{
    int ngay;
    int thang; 
    int nam;
};


struct Khachhang
{
    char maKH[100];
    char tenKH[100];
    int tuoi;
    char gioiTinh[10];
    char Sdt[15];
};

struct Hanghoa
{
    //char maSP[50];
    char tenSP[50];
    int soLuong;  //Khi tạo hàm nhớ phải có sự chỉnh sửa số lượng (vd: khi nhập 20 có khách hành mua 10 thì sl bây h là 10)
    double giaBan;  //Giá bán mỗi sản phẩm
};

struct ChitietHoadon
{
    char maHoadon[50];
    Hanghoa sanpham;
    int soluong_mua;
    double tien;      //tien = soluong_mua * giaBan(1sp)
};
 
//CHÚ Ý ĐÂY LÀ ĐOẠN GIẢI THÍCH CHO PHẦN TÍNH TIỀN CỦA CHI TIẾT HOÁ ĐƠN
// // Tạo một sản phẩm mới
// Hanghoa newHH;
// strcpy(newHH.tenSP, "Sản phẩm A");
// newHH.soLuong = 100;
// newHH.giaBan = 5000;

// // Thêm sản phẩm mới vào danh sách sản phẩm
// HH_Node *hh_node = new HH_Node;
// hh_node->data = newHH;
// hh_node->next = NULL;

// if (hh_list.head == NULL) {
//     hh_list.head = hh_list.tail = hh_node;
// }
// else {
//     hh_list.tail->next = hh_node;
//     hh_list.tail = hh_node;
// }

// // Tạo chi tiết hóa đơn
// ChitietHoadon newCTHD;
// strcpy(newCTHD.maHoadon, "HD001");
// newCTHD.soluong_mua = 10;

// Tính tiền cho chi tiết hóa đơn
// void tinhTien(ChitietHoadon *cthd, HH_List ds_hh) {
//     // Duyệt danh sách hàng hóa để tìm sản phẩm tương ứng với chi tiết hóa đơn
//     HH_Node *node = ds_hh.head;
//     while (node != NULL) {
//         if (strcmp(node->data.tenSP, cthd->sanpham.tenSP) == 0) {
//             // Tìm được sản phẩm tương ứng, tính tiền cho chi tiết hóa đơn
//             cthd->tien = cthd->soluong_mua * node->data.giaBan;
//             break;
//         }
//         node = node->next;
//     }
// }
// newCTHD.tien = tinhTien(newCYHD, HH_List ds);


struct CTHD_Node
{
    ChitietHoadon data;
    CTHD_Node *next;
};

struct CTHD_List
{
    CTHD_Node *head;
    CTHD_Node *tail;
};

struct Hoadon
{
    char maHoadon[50];
    Khachhang khachhang;
    Date ngay_nhap;   //Dua vao ngay_nhap de xac dinh doanh thu theo ngay
    CTHD_List CTHD_list;  //Danh sách chi tiết hoá đơn
    int soLuongCTHD; // Số lượng chi tiết hóa đơn
    double tongTien;
};

struct KH_Node
{
    Khachhang data;
    KH_Node *next;
};

struct HH_Node
{
    Hanghoa data;
    HH_Node *next;
};

struct HD_Node
{
    Hoadon data;
    HD_Node *next;
};

struct KH_List
{
    KH_Node *head;
    KH_Node *tail;
};

struct HH_List
{
    HH_Node *head;
    HH_Node *tail;
};

struct HD_List
{
    HD_Node *head;
    HD_Node *tail;
};


void init_KH(KH_List &ds)
{
    ds.head = NULL;
    ds.tail = NULL;
}

void init_HH(HH_List &ds)
{
    ds.head = NULL;
    ds.tail = NULL;
}

void init_CTHD(CTHD_List &ds)
{
    ds.head = NULL;
    ds.tail = NULL;
}

void init_HD(HD_List &ds)
{
    ds.head = NULL;
    ds.tail = NULL;
}

KH_Node *create_KH_Node(Khachhang dulieu)
{
    KH_Node *p = new KH_Node;
    if (p == NULL)
    {
        printf("\nKhong du bo nho cap phat!");
        return NULL;
    }

    p->data = dulieu;
    p->next = NULL;

    return p;
}

HH_Node *create_HH_Node(Hanghoa dulieu)
{
    HH_Node *p = new HH_Node;
    if (p == NULL)
    {
        printf("\nKhong du bo nho cap phat!");
        return NULL;
    }

    p->data = dulieu;
    p->next = NULL;

    return p;
}

HD_Node *create_HD_Node(Hoadon dulieu)
{
    HD_Node *p = new HD_Node;
    if (p == NULL)
    {
        printf("\nKhong du bo nho cap phat!");
        return NULL;
    }

    p->data = dulieu;
    p->next = NULL;

    return p;
}

CTHD_Node *create_CTHD_Node(ChitietHoadon dulieu)
{
    CTHD_Node *p = new CTHD_Node;
    if (p == NULL)
    {
        printf("\nKhong du bo nho cap phat!");
        return NULL;
    }

    p->data = dulieu;
    p->next = NULL;

    return p;
}

void ghiFIle_Khachhang(KH_List ds)
{
    FILE *f = fopen("Khachhang.txt", "w");
    if (f == NULL)
    {
        printf("\nKhong mo duoc file");
        _getch();
        return;
    }

    for (KH_Node *k = ds.head; k != NULL; k = k->next)
    {
        fprintf(f, "%-20s %-20s %-10d %-10s %-20s\n",k->data.maKH, k->data.tenKH, k->data.tuoi, 
                                            k->data.gioiTinh, k->data.Sdt);    
    }

    fclose(f);
}

void docFile_Khachhang(KH_List &ds, int *slg_KH)
{
    FILE *f = fopen("Khachhang.txt", "r");
    if (f == NULL)
    {
        printf("\nKhong the mo file");
        _getch();
        return;
    }

    int ktra;
    Khachhang dulieu;
    KH_Node *tmp = ds.head;
    
    while ((ktra = fscanf(f, "%20s %20s %10d %10s %20s",dulieu.maKH, dulieu.tenKH, 
                &dulieu.tuoi, dulieu.gioiTinh, dulieu.Sdt)) == 5)
    {
        KH_Node *p = create_KH_Node(dulieu);
        int find = 0;
        while (tmp != NULL)
        {
            if (strcmp(tmp->data.Sdt, p->data.Sdt) == 0)
            {
                find = 1;
                free(p);
                break;
            }
            tmp = tmp->next;
        }

        tmp = ds.head;
        if (find != 1)
        {
            if (ds.head == NULL)
            {
                ds.head = ds.tail = p;
            }
            else
            {
                ds.tail->next = p;
                ds.tail = p;
            }
            (*slg_KH)++;
        }
    }
    fclose(f);
}

void ghiFIle_Hanghoa(HH_List ds)
{
    FILE *f = fopen("Hanghoa.txt", "w");
    if (f == NULL)
    {
        printf("\nKhong mo duoc file");
        _getch();
        return;
    }

    for (HH_Node *k = ds.head; k != NULL; k = k->next)
    {
        fprintf(f, "%-20s %-10d %-20.2lf\n", k->data.tenSP, k->data.soLuong, k->data.giaBan);    
    }

    fclose(f);
}

void docFile_Hanghoa(HH_List &ds, int *slg_HH)
{
    FILE *f = fopen("Hanghoa.txt", "r");
    if (f == NULL)
    {
        printf("\nKhong the mo file");
        _getch();
        return;
    }

    int ktra;
    Hanghoa dulieu;
    HH_Node *tmp = ds.head;
    
    while ((ktra = fscanf(f, "%20s %10d %20lf", dulieu.tenSP, &dulieu.soLuong, &dulieu.giaBan)) == 3)
    {
        HH_Node *p = create_HH_Node(dulieu);
        int find = 0;
        while (tmp != NULL)
        {
            if (strcmp(tmp->data.tenSP, p->data.tenSP) == 0)
            {
                find = 1;
                free(p);
                break;
            }
            tmp = tmp->next;
        }

        tmp = ds.head;
        if (find != 1)
        {
            if (ds.head == NULL)
            {
                ds.head = ds.tail = p;
            }
            else
            {
                ds.tail->next = p;
                ds.tail = p;
            }
            (*slg_HH)++;
        }
    }
    fclose(f);
}


void ghiFIle_ChitietHoadon(CTHD_List ds)
{
    FILE *f = fopen("ChitietHoadon.txt", "w");
    if (f == NULL)
    {
        printf("\nKhong mo duoc file");
        _getch();
        return;
    }

    for (CTHD_Node *k = ds.head; k != NULL; k = k->next)
    {
        fprintf(f, "%-20s %-20s %-10d %-20.0lf\n", k->data.maHoadon, 
                k->data.sanpham.tenSP, k->data.soluong_mua, k->data.tien);    
    }

    fclose(f);
}

void docFile_ChitietHoadon(CTHD_List &ds, int *slg_CTHD)
{
    FILE *f = fopen("ChitietHoadon.txt", "r");
    if (f == NULL)
    {
        printf("\nKhong the mo file");
        _getch();
        return;
    }

    int ktra;
    ChitietHoadon dulieu;
    CTHD_Node *tmp = ds.head;
    
    while ((ktra = fscanf(f, "%20s %20s %10d %20lf", dulieu.maHoadon, 
                        dulieu.sanpham.tenSP, &dulieu.soluong_mua, &dulieu.tien)) == 4)
    {
        CTHD_Node *p = create_CTHD_Node(dulieu);
        int find = 0;
        while (tmp != NULL)
        {
            if (strcmp(tmp->data.maHoadon, p->data.maHoadon) == 0 
                        && strcmp(tmp->data.sanpham.tenSP, p->data.sanpham.tenSP) == 0)
            {
                find = 1;
                free(p);
                break;
            }
            tmp = tmp->next;
        }

        tmp = ds.head;
        if (find != 1)
        {
            if (ds.head == NULL)
            {
                ds.head = ds.tail = p;
            }
            else
            {
                ds.tail->next = p;
                ds.tail = p;
            }
            (*slg_CTHD)++;
        }
    }
    fclose(f);
}


void ghiFIle_Hoadon(HD_List ds)
{
    FILE *f = fopen("Hoadon.txt", "w");
    if (f == NULL)
    {
        printf("\nKhong mo duoc file");
        _getch();
        return;
    }

    for (HD_Node *k = ds.head; k != NULL; k = k->next)
    {
        fprintf(f, "%-20s %-20s %d/%d/%-10d %-10d %-20.2lf\n", k->data.maHoadon, 
                    k->data.khachhang.tenKH, k->data.ngay_nhap.ngay, k->data.ngay_nhap.thang, 
                    k->data.ngay_nhap.nam, k->data.soLuongCTHD, k->data.tongTien);    
    }

    fclose(f);
}

void docFile_Hoadon(HD_List &HD_list, CTHD_List &CTHD_list, int *slg_HD, int *slg_CTHD)
{
    FILE *f = fopen("Hoadon.txt", "r");
    if (f == NULL)
    {
        printf("\nKhong the mo file");
        _getch();
        return;
    }

    docFile_ChitietHoadon(CTHD_list, slg_CTHD);
    int ktra;
    Hoadon dulieu;
    HD_Node *tmp_HD = HD_list.head;
    
    while ((ktra = fscanf(f, "%20s %20s %d/%d/%10d %10d %20lf", 
                            dulieu.maHoadon,dulieu.khachhang.tenKH, &dulieu.ngay_nhap.ngay,
                            &dulieu.ngay_nhap.thang, &dulieu.ngay_nhap.nam, 
                            &dulieu.soLuongCTHD, &dulieu.tongTien)) == 7)
    {
        HD_Node *p = create_HD_Node(dulieu);
        int find = 0;
        while (tmp_HD != NULL)
        {
            if (strcmp(tmp_HD->data.maHoadon, p->data.maHoadon) == 0)
            {
                find = 1;
                free(p);
                break;
            }
            tmp_HD = tmp_HD->next;
        }
        tmp_HD = HD_list.head;

        if (find != 1)  //Kiểm tra nếu mã hoá đơn không trùng thì thêm vào cuối ds hoá đơn
        {
            if (HD_list.head == NULL)
            {
                HD_list.head = HD_list.tail = p;
            }
            else
            {
                HD_list.tail->next = p;
                HD_list.tail = p;
            }
            (*slg_HD)++;
        }
        CTHD_Node *tmp_CTHD = CTHD_list.head;
        while (tmp_CTHD  != NULL)
        {
            if (strcmp(p->data.maHoadon, tmp_CTHD->data.maHoadon) == 0)
            {
                if (tmp_HD->data.CTHD_list.head == NULL)
                {
                    tmp_HD->data.CTHD_list.head = tmp_HD->data.CTHD_list.tail = tmp_CTHD;
                }
                else
                {
                    tmp_HD->data.CTHD_list.tail->next = tmp_CTHD;
                    tmp_HD->data.CTHD_list.tail = tmp_CTHD;
                }
            }
            
            tmp_CTHD = tmp_CTHD->next;
        }
    }
    fclose(f);
}


void nhapthongtin_khachhang(Khachhang &kh)
{
    fflush(stdin);
    printf("\nNhap ma khach hang: ", kh.maKH); 
    scanf("%s",kh.maKH);
    // printf("\nNhap ten khach hang: ", kh.tenKH); 
    // scanf("%s",kh.tenKH);
    printf("\nNhap tuoi: ",kh.tuoi); 
    scanf("%d",&kh.tuoi);
    printf("\nNhap gioi tinh: ", kh.gioiTinh); 
    scanf("%s",kh.gioiTinh);
    printf("\nNhap so dien thoai: ", kh.Sdt); 
    scanf("%s",kh.Sdt);
}
void xuatthongtin_khachhang(Khachhang kh)
{
    printf("\nMa khach hang: %s",kh.maKH);
    printf("\nTen khach hang: %s",kh.tenKH);
    printf("\nTuoi: %d",kh.tuoi);
    printf("\nGioi tinh: %s",kh.gioiTinh);
    printf("\nSo dien thoai: %s",kh.Sdt);
}

void nhapthongtin_hanghoa(Hanghoa &hh)
{
    fflush(stdin);
    printf("\nNhap ten san pham: "); 
    scanf("%s",hh.tenSP);
    printf("\nNhap so luong: "); 
    scanf("%d",&hh.soLuong);
    printf("\nNhap gia ban: "); 
    scanf("%lf", &hh.giaBan);
}
void xuatthongtin_hanghoa(Hanghoa hh)
{
    printf("\nTen san pham: %s", hh.tenSP);
    printf("\nSo luong sp: %d", hh.soLuong);
    printf("\nGia ban: %lf", hh.giaBan);
}

void tinhTien_CTHD(ChitietHoadon *cthd, HH_List HH_list) {
    // Duyệt danh sách hàng hóa để tìm sản phẩm tương ứng với chi tiết hóa đơn
    HH_Node *node = HH_list.head;
    double tien = 0.00;
    while (node != NULL) {
        if (strcmp(node->data.tenSP, cthd->sanpham.tenSP) == 0) 
        {
            // Tìm được sản phẩm tương ứng, tính tiền cho chi tiết hóa đơn
            tien = node->data.giaBan *cthd->soluong_mua; 
            break;
        }
        node = node->next;
    }

    cthd->tien = tien;
}

void nhapthongtin_chitiethoadon(ChitietHoadon &cthd, HH_List HH_list)
{
    fflush(stdin);
    // printf("\nNhap ma hoa don: "); 
    // scanf("%s",cthd.maHoadon);
    printf("\nNhap ten san pham: ");
    scanf("%s", cthd.sanpham.tenSP);
    printf("\nNhap so luong mua: "); 
    scanf("%d",&cthd.soluong_mua);
    //cthd.tien = tinhTien(cthd, HH_list);

}

void xuatthongtin_chitiethoadon(ChitietHoadon cthd)
{
    printf("\nMa hoa don: %s",cthd.maHoadon);
    printf("\nTen san pham: %s", cthd.sanpham.tenSP);
    printf("\nSo luong mua: %d",cthd.soluong_mua);
}

void nhapthongtin_hoadon(Hoadon &hd)
{
    fflush(stdin);
    printf("\nNhap ma hoa don: "); 
    scanf("%s",hd.maHoadon);
    printf("\nNhap ten khach hang: ");
    scanf("%s", hd.khachhang.tenKH);
    printf("\nNhap ngay tao hoa don: "); 
    scanf("%d/%d/%d",&hd.ngay_nhap.ngay,&hd.ngay_nhap.thang,&hd.ngay_nhap.nam);
    printf("\nNhap so luong CTHD: ");
    scanf("%d",&hd.soLuongCTHD);
}
void xuatthongtin_hoadon(Hoadon hd)
{
    printf("\nMa hoa don: %s",hd.maHoadon);
    xuatthongtin_khachhang(hd.khachhang);
    printf("\nNgay nhap tao hoa don: %d/%d/%d",hd.ngay_nhap.ngay,hd.ngay_nhap.thang,hd.ngay_nhap.nam);
    printf("\nSo luong CTHD: %d", hd.soLuongCTHD);
}

void them_vao_cuoi_Khachhang(KH_List &l, KH_Node *p)
{
    if (l.head == NULL)
    {
        l.head = l.tail = p;
    }
    else
    {
        l.tail->next = p;
        l.tail = p;
    }
}

void them_vao_cuoi_hanghoa(HH_List &l, HH_Node *p)
{
    if (l.head == NULL)
    {
        l.head = l.tail = p;
    }
    else
    {
        l.tail->next = p;
        l.tail = p;
    }
}

void them_vao_cuoi_chitiethoadon(CTHD_List &l, CTHD_Node *p)
{
    if (l.head == NULL)
    {
        l.head = l.tail = p;
    }
    else
    {
        l.tail->next = p;
        l.tail = p;
    }
}

void them_vao_cuoi_hoadon(HD_List &l, HD_Node *p)
{
    if (l.head == NULL)
    {
        l.head = l.tail = p;
    }
    else
    {
        l.tail->next = p;
        l.tail = p;
    }
}

int ktra_HH(HH_List HH_list, Hanghoa hh)
{
    HH_Node *tmp = HH_list.head;
    while (tmp != NULL)
    {
        if (strcmp(tmp->data.tenSP, hh.tenSP) == 0)
            return 1;
        tmp = tmp->next;
    }
    return 0;
}

void them_HH(HH_List &HH_list, int *slg_HH)
{
    printf("\nNhap so hang hoa ban muon them: ");
    int n;
    scanf("%d", &n);
    for (int i = 1; i <= n; i++)
    {
        Hanghoa hh;
        printf("\n------ Nhap vao thong tin hang hoa thu %d ------", i);
        nhapthongtin_hanghoa(hh);
        if (ktra_HH(HH_list, hh) == 1)
        {
            printf("\nSan pham %s da ton tai trong kho!", hh.tenSP);
            int m;
            printf("\nVui long nhap vao so luong them moi cua san pham: ");
            scanf("%d", &m);
            (*slg_HH) = (*slg_HH) + m;
        }
        else
        {
            HH_Node *tmp = create_HH_Node(hh);
            them_vao_cuoi_hanghoa(HH_list, tmp);
            (*slg_HH)++;
        }
    }
}

int ktra_KH(KH_List KH_list, Khachhang kh)
{
    KH_Node *tmp = KH_list.head;
    while (tmp != NULL)
    {
        if (strcmp(tmp->data.tenKH, kh.tenKH) == 0)
            return 1;
    }
    return 0;
}

int ktra_CTHD(HH_List HH_list, ChitietHoadon cthd)
{
    if (HH_list.head == NULL)
        return 0;
    HH_Node *tmp = HH_list.head;
    while (tmp != NULL)
    {
        if (strcmp(tmp->data.tenSP, cthd.sanpham.tenSP) == 0)
            return 1;
        tmp = tmp->next;
    }
    return 0;
}

void them_KH(KH_List &KH_list, int *slg_KH, Khachhang kh)
{
    printf("\nKhach hang %s lan dau mua tai cua hang.", kh.tenKH);
    printf("\nVui long nhap thong tin khach hang: \n");
    nhapthongtin_khachhang(kh);
    KH_Node *KH_tmp = create_KH_Node(kh);
    them_vao_cuoi_Khachhang(KH_list, KH_tmp);
    (*slg_KH)++;
}

void tongTien_HD(HD_Node *hd)
{
    CTHD_Node *tmp = hd->data.CTHD_list.head;
    double tong = 0;
    
    while (tmp != NULL)
    {
        tong = tong + tmp->data.tien;
        tmp = tmp->next;
    }

    hd->data.tongTien = tong;
}

void them_HD(HD_List &HD_list, CTHD_List &CTHD_list, HH_List HH_list, KH_List &KH_list, 
                                                int *slg_KH, int *slg_HD, int *slg_CTHD)
{
    Hoadon HD;
    nhapthongtin_hoadon(HD);
    HD_Node *tmp_HD = create_HD_Node(HD);
    if (ktra_KH(KH_list, HD.khachhang) == 0)
    {
        Khachhang tmp = HD.khachhang;
        them_KH(KH_list, slg_KH, tmp);
    }
    int i = 1;
    while (i <= tmp_HD->data.soLuongCTHD)
    {
        ChitietHoadon CTHD;
        printf("\n------ Nhap vao san pham mua thu %d ------", i);
        nhapthongtin_chitiethoadon(CTHD, HH_list);  //Ds hàng hoá để tính tiền của hàng hoá
        strcpy(CTHD.maHoadon, HD.maHoadon);

        int ktra = ktra_CTHD(HH_list, CTHD);
        if  (ktra == 1)  //Kiểm tra sp vừa nhập có tồn tại trong danh sách hàng hoá không
        { //Nếu có
            tinhTien_CTHD(&CTHD, HH_list);
            CTHD_Node *tmp_CTHD = create_CTHD_Node(CTHD);
            them_vao_cuoi_chitiethoadon(tmp_HD->data.CTHD_list, tmp_CTHD);

            CTHD_Node *CTHD_tmp = create_CTHD_Node(CTHD);   //tạo chi tiết hoá đơn để thêm vào ds CTHD gốc (tổng rất nhiều chi tiết hoá đơn)
            them_vao_cuoi_chitiethoadon(CTHD_list, CTHD_tmp);
            (*slg_CTHD)++;
            i++; 
        }
        else
        {  //Nếu không
            printf("\nSan pham %s khong ton tai trong ds hang hoa", CTHD.sanpham.tenSP);
            printf("\nVui long nhap lai!");
        }   
    }

    tongTien_HD(tmp_HD);
    them_vao_cuoi_hoadon(HD_list, tmp_HD);
    (*slg_HD)++;
}

int main()
{
    KH_List KH_list;
    HH_List HH_list;
    CTHD_List CTHD_list;
    HD_List HD_list;
    init_HD(HD_list);
    init_CTHD(CTHD_list);
    init_KH(KH_list);
    init_HH(HH_list);
    int slg_KH;
    int slg_CTHD;
    int slg_HH;
    int slg_HD;

    docFile_Khachhang(KH_list, &slg_KH);
    docFile_Hanghoa(HH_list, &slg_HH);
    docFile_Hoadon(HD_list, CTHD_list, &slg_HD, &slg_CTHD);

    while ( 1 != 0)
    {
        system("cls");
        printf("---------------- MENU ------------------");
        printf("\n\t1. Them hoa don va cac chi tiet hoa don tuong ung");
        printf("\n\t2. In ra hoa don.");
        printf("\n\t0. Thoat!");
        printf("\n---------------- END ------------------");

        int lc;
        printf("\nNhap vao lua chon: ");
        scanf("%d", &lc);
        switch (lc)
        {
        case 1:
        {
            them_HH(HH_list, &slg_HH);
            ghiFIle_Hanghoa(HH_list);
            break;
        }
        case 2:
        {
            them_HD(HD_list, CTHD_list, HH_list, KH_list, &slg_KH, &slg_HD, &slg_CTHD);
            ghiFIle_Khachhang(KH_list);
            ghiFIle_Hoadon(HD_list);
            ghiFIle_ChitietHoadon(CTHD_list);
            break;
        }
        case 0: return 1;
            break;
        }
    }
}
